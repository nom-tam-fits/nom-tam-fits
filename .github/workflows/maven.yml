# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on: 
  push:
    paths:
      - 'src/main/java/**'
      - 'src/test/java/**'
      - 'pom.xml'
      - '.github/workflows/maven.yml'

  pull_request:
    paths:
      - 'src/main/java/**'
      - 'src/test/java/**'
      - 'pom.xml'
      - '.github/workflows/maven.yml'

jobs:
  build:
    name: Build and Test

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        path: nom-tam-fits
        
    - name: Check out blackbox images 
      uses: actions/checkout@v3
      with:
        repository: nom-tam-fits/blackbox-images
        path: blackbox-images
        
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        
    - name: Build and test with Maven
      run: mvn -B test jacoco:report --file pom.xml
      working-directory: ./nom-tam-fits
      
    - name: Log coverage percentage
      continue-on-error: true
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
       
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
        working-directory: ./nom-tam-fits
        files: ./target/site/jacoco/jacoco.xml
        fail_ci_if_error: false
        flags: unittests
        name: codecov
        verbose: true
        
    - name: Upload coverage to Coveralls.io
      continue-on-error: true
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        mvn coveralls:report -DrepoToken=$COVERALLS_TOKEN
      working-directory: ./nom-tam-fits
        
    - name: Check Project Site
      run: mvn -B site:stage
      working-directory: ./nom-tam-fits
        
  release:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'nom-tam-fits' && github.ref_name == 'master' }}
    permissions: 
      contents: read
    
    steps:
    
    - uses: actions/checkout@v3
        
    - name: Set up Java for Publishing to Nexus
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git_user_signingkey: true

    - name: Publish to Nexus
      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: mvn -B deploy -DskipTests -Pnexus-repo --settings settings.xml
      
